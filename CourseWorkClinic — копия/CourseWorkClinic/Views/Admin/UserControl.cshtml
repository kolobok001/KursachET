@model IEnumerable<CourseWorkClinic.App_Data.Пользователи>

@{
    WebGrid grid = new WebGrid(Model, canPage: true, rowsPerPage: 10);
    grid.Pager(WebGridPagerModes.NextPrevious);
}

<h2>Управление пользователями</h2>
<h2></h2>

<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-2.1.3.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")"></script>

<script>
    $(function () {
        $('.edit-mode').hide();
        $(".hidden-div").hide();

        $('.addnewCount').on('click', function () {
            $('.hidden-div, .addnewCount').toggle();
        });

        $('.savenewCount').on('click', function () {
            var login = $("#NewLogin").val();
            var password = $("#NewPassword").val();
            var role = $("#RoleList").val();

            $.post('/Edit/AddUser', {
                Login: login, Password: password,
                Role: role
            })
            .done(function (result) {
                window.location = '/Admin/UserControl';
                alert('Данные сохранены');
            })
            .fail(function () {
                console.log('server error');
                alert('Ошибка сохранения');
            });

            $('.hidden-div, .addnewCount').toggle();
        }
        );

        $('.edit-staff').on('click', function () {
            var tr = $(this).parents('tr:first');
            tr.find('.edit-mode, .display-mode').toggle();
        });

        $('.save-staff').on('click', function () {
            var tr = $(this).parents('tr:first');
            var userId = $(this).prop('id');
            var login = tr.find("#Login").val();
            var password = tr.find("#Password").val();
            var role = tr.find("#Role").val();
                
            $.post('/Edit/EditUser', {
                UserId:userId, Login: login, Password: password,
                Role: role
            })
            .done(function (result) {
                window.location = '/Admin/UserControl', {};
                alert('Данные сохранены');
            })
            .fail(function () {
                console.log('server error');
                alert('Ошибка сохранения');
            });
            tr.find('.edit-mode, .display-mode').toggle();
        }
        );

        $('.delete-staff').on('click', function () {
            if (confirm("Вы уверены, что хотите удалить эту запись?")) {
                var tr = $(this).parents('tr:first');
                var userId = $(this).prop('id');
                $.post('/Edit/DeleteUser', { UserId: userId })
                .done(function (result) {
                    window.location = '/Admin/UserControl';
                    alert('Данные удалены');
                })
                .fail(function () {
                    console.log('server error');
                    alert('Ошибка удаления');
                });
            }
        });
    })
</script>


<button class="btn-edit addnewCount"><i class="icon-search"></i><strong>Добавить пользователя</strong></button>

<div class="hidden-div">
    <button class="btn-edit savenewCount"><i class="icon-search"></i><strong>Сохранить</strong></button>
</div>

<div class="hidden-div">
    <input type="text" id="NewLogin" class="form-control" placeholder="Логин" value="" autocomplete="off">
</div>

<div class="hidden-div">
    <input type="password" id="NewPassword" class="form-control" placeholder="Пароль" value="">
</div>

<div class="hidden-div" style=" height:10px">
        @Html.DropDownList("RoleList", new SelectList(new[] { "админ", "расписание", "регистратура" }))
        <h1> </h1>
        <h1> </h1>
</div>

@grid.GetHtml(
    tableStyle: "simple-little-table",
    alternatingRowStyle: "alternate",
    selectedRowStyle: "selected",
    headerStyle: "header",
    columns: grid.Columns(
        grid.Column("Логин",
                    style: "col2",
                    canSort: true,
                    format: @<text>
                        <span id="Логин" class="display-mode">@item.login</span>
                        <div class="myTextBox">@Html.TextBox("Login", (string)item.login, new { @class = "edit-mode", style = "width: 90px" }) </div>
                    </text>),
       grid.Column("Пароль",
                    style: "col3",
                    canSort: true,
                    format: @<text>
                        <span id="врач" class="display-mode">@item.password</span>
                        <div class="myTextBox">@Html.TextBox("Password", (string)item.password, new { @class = "edit-mode", style = "width: 90px" }) </div>
                    </text>),
        grid.Column("Роль",
                    style: "col6",
                    canSort: true,
                    format: @<text>
                        <span id="неделя" class="display-mode">@item.role</span>
                        @Html.DropDownList("Role", new SelectList(new[] { "админ", "расписание", "регистратура" }, (string)item.role), new { @class = "edit-mode"})
                        @*<div class="myTextBox">@Html.TextBox("Role", (string)item.role, new { @class = "edit-mode", style = "width: 90px" }) </div>*@
                    </text>),
        grid.Column("",
                    style: "col1",
                    canSort: true,
                    format: @<text>
                        <button class="edit-staff display-mode btn-edit" id="@item.ID_пользователя"><i class="icon-search"></i><strong>Изменить</strong></button>
                        <button class="delete-staff mode btn-edit" id="@item.ID_пользователя"><i class="icon-search"></i><strong>Удалить</strong></button>
                        <button class="save-staff edit-mode btn-edit" id="@item.ID_пользователя"><i class="icon-search"></i><strong>Сохранить</strong></button>
                    </text>)
))
